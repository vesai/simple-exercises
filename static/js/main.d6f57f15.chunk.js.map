{"version":3,"sources":["components/Trainer.module.css","components/Card.module.css","modules/steps.ts","components/Card.tsx","tools/array.ts","hooks/usePausableTimeout.ts","modules/icons.tsx","hooks/useNoSleep.ts","components/PartialCircle.tsx","components/ButtonWithCircle.tsx","components/PlayPauseButton.tsx","tools/time.ts","components/Trainer.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/ButtonWithCircle.module.css"],"names":["module","exports","steps","title","items","timeSec","repeatCount","subtitle","group","step","push","data","VibrateType","arrayWithLength","length","array","Array","i","usePausableTimeout","isPaused","update","useUpdate","useInterval","currentTime","Date","now","startTime","useRef","pausedTime","useEffect","current","useCallback","time","playIconHtml","__html","pauseIconHtml","nextIconHtml","noSleep","NoSleep","requestersCount","createNoSleepClient","isEnabled","enable","disable","svgStyle","transform","PartialCircle","part","size","strokeWidth","normalizedSize","halfNormalizedSize","halfSize","strokeDasharray","useMemo","Math","PI","width","height","viewBox","style","r","cx","cy","fill","stroke","strokeLinecap","ButtonWithCircle","isFreezed","freezePercent","dangerouslySetInnerHTML","onClick","className","css","root","circle","classNames","circle_back","button","button_freezed","PlayPauseButton","onFreezeBeforePlay","onPlay","onPause","useState","isFreezeBeforePlay","setFreezeBeforePlay","resetTimer","handlePlay","needEnd","undefined","Card","isActive","stepIndex","stepsCount","goCard","setPaused","isActiveLatest","useLatest","useNoSleep","currentTimeFromStart","setStarted","cycleTimingsMs","dataItems","timings","oneCycleTimeMs","repeatDone","floor","thisTurnTime","activeStep","useItemWithNearestLessValue","thisStepTime","isStarted","isStartedLatest","isEnded","tryVibrate","Short","Double","stepItems","repeatItems","handleFreezeBeforePlay","handlePause","handleGoNext","min","stepsList","map","_","index","stepsItem","item_active","item","isActiveItem","timeCircle","timeCircle_full","itemTitle_active","repeatItem","repeatItem_done","playPause","type","navigator","vibrate","value","sortedAscArray","prevIntervalAndResult","currentData","getItemIndexWithNearestLessValue","animationConifg","friction","tension","Trainer","windowSize","useWindowSize","defaultOffset","pixelsInRem","getPos","rawX","down","x","newX","widthPart","newZ","max","useSprings","config","animationProps","setAnimationProps","setStepIndex","bind","useDrag","movement","abs","direction","newIndex","axis","filterTaps","revI","div","card","interpolate","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6f57f15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Trainer_root__2D0FO\",\"card\":\"Trainer_card__QlvSl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Card_root__3MkF8\",\"stepsList\":\"Card_stepsList__1NQhJ\",\"stepsItem\":\"Card_stepsItem__IlQTM\",\"item_active\":\"Card_item_active__3ytBQ\",\"title\":\"Card_title__1yJ7t\",\"subtitle\":\"Card_subtitle__1lNmV\",\"data\":\"Card_data__3UBEy\",\"item\":\"Card_item__1z5IU\",\"time\":\"Card_time__3t47b\",\"timeCircle\":\"Card_timeCircle__2Vauv\",\"timeCircle_full\":\"Card_timeCircle_full__3diLc\",\"itemTitle_active\":\"Card_itemTitle_active__2xQqC\",\"repeatCount\":\"Card_repeatCount__2eZHW\",\"repeatItem\":\"Card_repeatItem__3-1q1\",\"repeatItem_done\":\"Card_repeatItem_done__3XRSg\",\"prevNext\":\"Card_prevNext__114Pb\",\"playPause\":\"Card_playPause__1FhSV\"};","const stepGroups = [{\n  title: \"Сидеть\",\n  steps: [\n    {\n      items: [\n        {\n          title: \"Зажмурится\",\n          timeSec: 4\n        },\n        {\n          title: \"Разомкнуть веки\",\n          timeSec: 4\n        },\n      ],\n      repeatCount: 8\n    },\n    {\n      items: [\n        {\n          title: \"Быстро моргать\",\n          timeSec: 15\n        },\n        {\n          title: \"Закрыть глаза\",\n          timeSec: 10\n        },\n      ],\n      repeatCount: 4\n    },\n    {\n      items: [{\n        title: \"Массировать указательными пальцами\",\n        timeSec: 60\n      }],\n      repeatCount: 1\n    },\n    {\n      items: [{\n        title: \"Лёгкие надавливающие движения\",\n        timeSec: 3\n      }, {\n        title: \"Отдых\",\n        timeSec: 3\n      }],\n      repeatCount: 4\n    }\n  ]\n},\n{\n  title: \"Ровно сидеть\",\n  steps: [\n    {\n      items: [{\n        title: \"Вверх-вниз\",\n        timeSec: 3\n      }],\n      repeatCount: 12\n    },\n    {\n      items: [{\n        title: \"Влево-вправо\",\n        timeSec: 3\n      }],\n      repeatCount: 12\n    },\n    {\n      items: [{\n        title: \"Вверх-вниз, влево-вправо\",\n        timeSec: 6\n      }],\n      repeatCount: 10\n    },\n    {\n      items: [{\n        title: \"Вращение по и против часовой\",\n        timeSec: 3\n      }],\n      repeatCount: 6\n    }\n  ]\n},\n{\n  title: \"Стоять\",\n  steps: [\n    {\n      items: [\n        {\n          title: \"Стена\",\n          timeSec: 3\n        },\n        {\n          title: \"Палец 30 см от глаз\",\n          timeSec: 5\n        }\n      ],\n      repeatCount: 12\n    },\n    {\n      items: [{\n        title: \"Палец на вытянутой руке: cмотреть и приближать до двоения\",\n        timeSec: 4\n      }],\n      repeatCount: 8\n    },\n  ]\n},\n{\n  // TODO special page!\n  title: \"Стоять у окна\",\n  subtitle: \"Метка на окне, объект в дали. По 3 секунды\",\n  steps: [\n    {\n      items: [{\n        title: \"Левый глаз\",\n        timeSec: 120\n      }, {\n        title: \"Оба глаза\",\n        timeSec: 120\n      }, {\n        title: \"Правый глаз\",\n        timeSec: 120\n      }],\n      repeatCount: 1\n    }\n  ]\n}];\n\nexport type LinearizedStep = {\n  title: string;\n  subtitle?: string;\n  repeatCount: number;\n  data: {\n    items: {\n      title: string;\n      timeSec: number;\n    }[];\n  };\n};\n\nexport const steps: LinearizedStep[] = [];\n\nfor (const group of stepGroups) {\n  for (const step of group.steps) {\n    steps.push({\n      title: group.title,\n      subtitle: group.subtitle,\n      repeatCount: step.repeatCount,\n      data: step\n    });\n  }\n}\n","import { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { useLatest } from 'react-use';\n\nimport css from './Card.module.css';\nimport { secToString } from '../tools/time';\nimport { arrayWithLength } from '../tools/array';\nimport { LinearizedStep } from '../modules/steps';\nimport { usePausableTimeout } from '../hooks/usePausableTimeout';\nimport { nextIconHtml } from '../modules/icons';\nimport { useNoSleep } from '../hooks/useNoSleep';\nimport { PartialCircle } from './PartialCircle';\nimport { pixelsInRem } from '../common';\nimport { ButtonWithCircle } from './ButtonWithCircle';\nimport { PlayPauseButton } from './PlayPauseButton';\n\nconst strokeWidthTimeCircle = 4;\n\nenum VibrateType {\n  Short,\n  Double\n}\n\ntype CardProps = {\n  isActive: boolean;\n  stepIndex: number;\n  stepsCount: number;\n  step: LinearizedStep;\n  goCard(index: number): void;\n};\n\nexport const Card: FC<CardProps> = ({ isActive, step, stepIndex, stepsCount, goCard }) => {\n  const [isPaused, setPaused] = useState(true);\n  const isActiveLatest = useLatest(isActive);\n  const noSleep = useNoSleep();\n\n  const [currentTimeFromStart, resetTimer] = usePausableTimeout(isPaused);\n\n  useEffect(() => {\n    if (!isActive) {\n      setPaused(true);\n      setStarted(false);\n      resetTimer();\n      noSleep.disable();\n    }\n  }, [isActive, noSleep, resetTimer]);\n\n  const cycleTimingsMs = useMemo(() => {\n    const dataItems = step.data.items;\n\n    const timings = [0];\n    for (let i = 0; i < dataItems.length - 1; i++) {\n      timings.push(timings[i] + (dataItems[i].timeSec * 1000));\n    }\n    return timings;\n  }, [step.data.items]);\n\n  const oneCycleTimeMs = cycleTimingsMs[cycleTimingsMs.length - 1] + step.data.items[cycleTimingsMs.length - 1].timeSec * 1000;\n\n  const repeatDone = Math.floor(currentTimeFromStart / oneCycleTimeMs);\n  const thisTurnTime = currentTimeFromStart - repeatDone * oneCycleTimeMs;\n\n  const activeStep = useItemWithNearestLessValue(thisTurnTime, cycleTimingsMs);\n  const thisStepTime = thisTurnTime - (activeStep === -1 ? 0 : cycleTimingsMs[activeStep]);\n  const [isStarted, setStarted] = useState(false);\n  const isStartedLatest = useLatest(isStarted);\n  const isEnded = repeatDone >= step.repeatCount;\n\n  useEffect(() => {\n    if (isStartedLatest.current && !isEnded) {\n      tryVibrate(VibrateType.Short);\n    }\n  }, [isStartedLatest, isEnded, repeatDone, activeStep]); // activeStep, repeatDone needs for vibrate every time when step changed\n\n  useEffect(() => {\n    if (isEnded) {\n      tryVibrate(VibrateType.Double);\n      setPaused(true);\n      noSleep.disable();\n    }\n  }, [isEnded, noSleep]);\n  \n  const stepItems = useMemo(\n    () => arrayWithLength(stepsCount),\n    [stepsCount]\n  );\n\n  const repeatItems = useMemo(\n    () => arrayWithLength(step.repeatCount),\n    [step.repeatCount]\n  );\n\n  const handleFreezeBeforePlay = useCallback(() => {\n    setStarted(true);\n    noSleep.enable();\n  }, [noSleep]);\n\n  const handlePlay = useCallback(() => {\n    if (isActiveLatest.current) {\n      setPaused(false);\n      tryVibrate(VibrateType.Short);\n    }\n  }, [isActiveLatest]);\n\n  const handlePause = useCallback(() => {\n    setPaused(true);\n    noSleep.disable();\n  }, [noSleep]);\n\n  const handleGoNext = useCallback(() => {\n    goCard(Math.min(stepsCount, stepIndex + 1));\n  }, [goCard, stepIndex, stepsCount]);\n\n  return (\n    <div className={css.root}>\n      <div className={css.stepsList}>\n        {stepItems.map((_, index) => (\n          <div\n            className={classNames(css.stepsItem, stepIndex >= index && css.item_active)}\n            key={index}\n          />\n        ))}\n      </div>\n      <div className={css.title}>\n        {step.title}\n      </div>\n      {step.subtitle !== undefined && (\n        <div className={css.subtitle}>\n          {step.subtitle}\n        </div>\n      )}\n      <div className={css.data}>\n        {step.data.items.map((item, index) => {\n          const isActiveItem = index === activeStep && isStarted && !isEnded;\n          return (\n            <div key={index} className={css.item}>\n              <div className={css.time}>\n                <div className={css.timeCircle}>\n                  <PartialCircle\n                    part={\n                      isActiveItem\n                        ? thisStepTime / 1000 / item.timeSec\n                        : isEnded || index < activeStep ? 1 : 0\n                    }\n                    size={2 * pixelsInRem + strokeWidthTimeCircle}\n                    strokeWidth={strokeWidthTimeCircle}\n                  />\n                </div>\n                <div className={classNames(css.timeCircle, css.timeCircle_full)}>\n                  <PartialCircle\n                    part={1}\n                    size={2 * pixelsInRem + strokeWidthTimeCircle}\n                    strokeWidth={strokeWidthTimeCircle}\n                  />\n                </div>\n                {secToString(item.timeSec)}\n              </div>\n              <div className={classNames(isActiveItem && css.itemTitle_active)}>\n                {item.title}\n              </div>\n            </div>\n          );\n        })}\n        {step.repeatCount !== 1 && (\n          <div className={css.item}>\n            <div className={css.repeatCount}>\n              x{step.repeatCount}\n            </div>\n            {repeatItems.map((_, index) => (\n              <div\n                key={index}\n                className={classNames(\n                  css.repeatItem,\n                  isStarted && index <= repeatDone && css.repeatItem_done\n                )}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n      <div className={css.playPause}>\n        {isEnded ? (\n          <ButtonWithCircle\n            isFreezed={false}\n            dangerouslySetInnerHTML={nextIconHtml}\n            onClick={handleGoNext}\n          />\n        ) : (\n          <PlayPauseButton\n            isPaused={isPaused}\n            onFreezeBeforePlay={handleFreezeBeforePlay}\n            onPlay={handlePlay}\n            onPause={handlePause}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst tryVibrate = (type: VibrateType) => {\n  if (navigator.vibrate) {\n    // If support\n    switch (type) {\n      case VibrateType.Short:\n        navigator.vibrate(50);\n        break;\n      case VibrateType.Double:\n        navigator.vibrate([50, 50, 50]);\n        break;\n    }\n  }\n}\n\ntype IntervalAndResult = {\n  array: number[];\n  index: number;\n};\n\nconst useItemWithNearestLessValue = (value: number, sortedAscArray: number[]): number => {\n  const prevIntervalAndResult = useRef<IntervalAndResult | null>(null);\n  const currentData = prevIntervalAndResult.current;\n  if (\n    currentData !== null\n    && currentData.array === sortedAscArray\n    && currentData.array[currentData.index] <= value\n    && (\n      currentData.index === currentData.array.length - 1\n      || currentData.array[currentData.index + 1] > value\n    )\n  ) {\n    return currentData.index;\n  }\n\n  const index = getItemIndexWithNearestLessValue(value, sortedAscArray);\n  prevIntervalAndResult.current = {\n    array: sortedAscArray,\n    index\n  };\n  \n  return index;\n};\n\nconst getItemIndexWithNearestLessValue = (value: number, sortedAscArray: number[]): number => {\n  for (let i = sortedAscArray.length - 1; i >= 0; i--) {\n    if (value >= sortedAscArray[i]) {\n      return i;\n    }\n  }\n  return -1;\n};","export const arrayWithLength = (length: number): null[] => {\n  const array = new Array(length);\n  for (let i = 0; i < length; i++) {\n    array[i] = null;\n  }\n  return array;\n}\n","import { useCallback, useEffect, useRef } from 'react';\nimport { useInterval, useUpdate } from 'react-use';\n\ntype UsePausableTimeoutReturn = [\n  timeFromStart: number,\n  reset: () => void\n]\n\nexport const usePausableTimeout = (isPaused: boolean): UsePausableTimeoutReturn => {\n  const update = useUpdate();\n  useInterval(update, isPaused ? null : 50);\n\n  const currentTime = Date.now();\n  const startTime = useRef(currentTime);\n  const pausedTime = useRef<number | null>(null);\n  \n  useEffect(() => {\n    if (isPaused) {\n      pausedTime.current = Date.now();\n    } else if (pausedTime.current !== null) {\n      startTime.current += Date.now() - pausedTime.current;\n      pausedTime.current = null;\n    }\n  }, [isPaused]);\n\n  const timeFromStart = (pausedTime.current ?? currentTime) - startTime.current;\n  const reset = useCallback(() => {\n    const time = Date.now();\n    startTime.current = time;\n    if (pausedTime.current !== null) {\n      pausedTime.current = time;\n    }\n  }, []);\n\n  return [timeFromStart, reset];\n};\n","const playIconString = '<svg viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M45 22.268C46.3333 23.0378 46.3333 24.9623 45 25.7321L15 43.0526C13.6667 43.8224 12 42.8601 12 41.3205L12 6.67949C12 5.13989 13.6667 4.17764 15 4.94744L45 22.268Z\" fill=\"currentColor\" /></svg>';\nconst pauseIconString = '<svg viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"12\" y=\"8\" width=\"8\" height=\"32\" rx=\"2\" fill=\"currentColor\"/><rect x=\"28\" y=\"8\" width=\"8\" height=\"32\" rx=\"2\" fill=\"currentColor\"/></svg>';\nconst nextIconString = '<svg viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16.107 9.11944C15.2098 7.79117 16.1615 6 17.7644 6H21.7795C22.4439 6 23.065 6.32996 23.4369 6.88056L34.2439 22.8806C34.7007 23.5569 34.7007 24.4431 34.2439 25.1194L23.4369 41.1194C23.065 41.67 22.4439 42 21.7795 42H17.7644C16.1615 42 15.2098 40.2088 16.107 38.8806L25.4018 25.1194C25.8586 24.4431 25.8586 23.5569 25.4018 22.8806L16.107 9.11944Z\" fill=\"currentColor\"/></svg>';\n\nexport const playIconHtml = { __html: playIconString };\nexport const pauseIconHtml = { __html: pauseIconString };\nexport const nextIconHtml = { __html: nextIconString };","import NoSleep from 'nosleep.js';\nimport { useEffect, useState } from 'react';\n\nconst noSleep = new NoSleep();\n\nlet requestersCount = 0;\n\nconst createNoSleepClient = () => {\n  let isEnabled = false;\n\n  return {\n    enable() {\n      if (isEnabled) {\n        return;\n      }\n      isEnabled = true;\n      if (requestersCount === 0) {\n        noSleep.enable();\n      }\n      requestersCount++;\n    },\n    disable() {\n      if (!isEnabled) {\n        return;\n      }\n      isEnabled = false;\n      requestersCount--;\n      if (requestersCount === 0) {\n        noSleep.disable();\n      }\n    }\n  };\n}\n\nexport const useNoSleep = () => {\n  const [noSleep] = useState(createNoSleepClient);\n  useEffect(() => {\n    return () => {\n      noSleep.disable();\n    }\n  }, [noSleep]);\n\n  return noSleep;\n};\n","import { FC, useMemo } from \"react\";\n\ntype Props = {\n    part: number; // value in [0; 1]\n    size: number;\n    strokeWidth?: number;\n};\n\nconst svgStyle = { transform: \"rotate(-90deg)\" };\n\nexport const PartialCircle: FC<Props> = ({ part, size, strokeWidth = 2 }) => {\n  const normalizedSize = size - strokeWidth;\n  const halfNormalizedSize = normalizedSize / 2;\n  const halfSize = size / 2;\n  const strokeDasharray = useMemo(() => {\n    return `${part * Math.PI * normalizedSize} ${Math.PI * normalizedSize}`;\n  }, [part, normalizedSize]);\n\n  return (\n    <svg width={size} height={size} viewBox={`0 0 ${size} ${size}`} style={svgStyle}>\n      {part !== 0 && (\n        <circle\n          r={halfNormalizedSize}\n          cx={halfSize}\n          cy={halfSize}\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth={strokeWidth}\n          strokeLinecap=\"round\"\n          strokeDasharray={strokeDasharray}\n        />\n      )}\n    </svg>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { pixelsInRem } from '../common';\n\nimport css from './ButtonWithCircle.module.css';\nimport { PartialCircle } from './PartialCircle';\n\ntype Props = {\n  isFreezed: boolean;\n  freezePercent?: number;\n  dangerouslySetInnerHTML: { __html: string; };\n  onClick?(): void;\n}\n\nexport const ButtonWithCircle: FC<Props> = ({\n  isFreezed, freezePercent, dangerouslySetInnerHTML, onClick\n}) => {\n  return (\n    <button\n      className={css.root}\n      onClick={onClick}\n    >\n      {isFreezed && (\n        <>\n          <div className={css.circle}>\n            <PartialCircle\n              part={freezePercent ?? 0}\n              size={6 * pixelsInRem}\n              strokeWidth={4}\n            />\n          </div>\n          <div className={classNames(css.circle, css.circle_back)}>\n            <PartialCircle\n              part={1}\n              size={6 * pixelsInRem}\n              strokeWidth={4}\n            />\n          </div>\n        </>\n      )}\n      <div\n        className={classNames(css.button, isFreezed && css.button_freezed)}\n        dangerouslySetInnerHTML={dangerouslySetInnerHTML}\n      />\n    </button>\n  );\n};\n","import { FC, useCallback, useEffect, useState } from 'react';\nimport { usePausableTimeout } from '../hooks/usePausableTimeout';\nimport { playIconHtml, pauseIconHtml } from '../modules/icons';\nimport { ButtonWithCircle } from './ButtonWithCircle';\n\ntype Props = {\n  isPaused: boolean;\n  onFreezeBeforePlay(): void;\n  onPlay(): void;\n  onPause(): void;\n};\n\nconst freezeTime = 800;\n\nexport const PlayPauseButton: FC<Props> = ({ isPaused, onFreezeBeforePlay, onPlay, onPause }) => {\n  const [isFreezeBeforePlay, setFreezeBeforePlay] = useState(false);\n  const [time, resetTimer] = usePausableTimeout(!isFreezeBeforePlay);\n\n  const handlePlay = useCallback(() => {\n    onFreezeBeforePlay();\n    resetTimer();\n    setFreezeBeforePlay(true);\n  }, [onFreezeBeforePlay, resetTimer]);\n\n  const needEnd = time > freezeTime;\n\n  useEffect(() => {\n    if (needEnd) {\n      setFreezeBeforePlay(false);\n      onPlay();\n    }\n  }, [needEnd, onPlay]);\n\n  return (\n    <ButtonWithCircle\n      freezePercent={time / freezeTime}\n      isFreezed={isFreezeBeforePlay}\n      dangerouslySetInnerHTML={isPaused ? playIconHtml : pauseIconHtml}\n      onClick={isFreezeBeforePlay ? undefined : isPaused ? handlePlay : onPause}\n    />\n  );\n};\n","export const secToString = (timeSec: number): string => {\n  if (timeSec < 60) {\n    return `${timeSec}s`;\n  }\n  return `${Math.floor(timeSec/60)}m`;\n}\n","import { FC, useCallback, useState } from 'react';\nimport { useDrag } from 'react-use-gesture';\nimport { animated, interpolate, useSprings } from 'react-spring';\n\nimport css from './Trainer.module.css';\nimport { steps } from '../modules/steps';\nimport { Card } from './Card';\nimport { useWindowSize } from 'react-use';\nimport { pixelsInRem } from '../common';\n\nconst animationConifg = {\n  friction: 50,\n  tension: 800 \n};\n\nexport const Trainer: FC = () => {\n  const windowSize = useWindowSize();\n  const defaultOffset = windowSize.width + pixelsInRem * 2;\n\n  const getPos = useCallback((index: number) => (rawX: number, down: number) => {\n    const x = (rawX + index) * defaultOffset;\n    const newX = x < 0 ? x : 0;\n    const widthPart = x / windowSize.width;\n    const newZ = x < 0 ? 1 : Math.max((1 - widthPart / 5), 0);\n    return `scale(${newZ - down * 0.1}) translateX(${newX}px)`;\n  }, [defaultOffset, windowSize.width]);\n\n  const [animationProps, setAnimationProps] = useSprings(steps.length, () => ({\n    x: 0,\n    down: 0,\n    config: animationConifg\n  }));\n\n  const [stepIndex, setStepIndex] = useState(0);\n\n  const goCard = (index: number) => {\n    setStepIndex(index);\n    setAnimationProps({ x: -index, down: 0 });\n  };\n\n  const bind = useDrag(({ down, movement: [x] }) => {\n    if (down) {\n      setAnimationProps({ x: (x / defaultOffset) - stepIndex, down: 1 });\n      return;\n    }\n\n    if (Math.abs(x) < (windowSize.width / 4)) {\n      setAnimationProps({ x: -stepIndex, down: 0 });\n      return;\n    }\n\n    const direction = x < 0 ? 1 : -1;\n    const newIndex = Math.max(0, Math.min(steps.length - 1, stepIndex + direction));\n    goCard(newIndex);\n  }, { axis: 'x', filterTaps: true });\n\n  return (\n    <div {...bind()} className={css.root}>\n      {animationProps.map(({ x, down }, revI) => {\n        const i = animationProps.length - revI - 1;\n\n        return (\n          <animated.div\n            key={i}\n            className={css.card}\n            style={{\n              transform: interpolate([x, down], getPos(i))\n            }}\n          >\n            <Card\n              isActive={i === stepIndex}\n              stepIndex={i}\n              stepsCount={steps.length}\n              step={steps[i]}\n              goCard={goCard}\n            />\n          </animated.div>\n        );\n      })}\n    </div>\n  );\n};\n","import { Trainer } from './components/Trainer';\n\nexport const App = () => {\n  return (\n    <Trainer />\n  );\n}\n\n\n/* <div>Работа над страницей в процессе...</div>\n      <div>\n        по материалам сайта{' '}\n        <a href='https://www.ochkov.net/informaciya/stati/kak-vypolnyat-lechebnuyu-gimnastiku-dlya-glaz-po-metodike-avetisova.htm'>\n          ochkov.net\n        </a>\n      </div> */","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonWithCircle_root__2KHPu\",\"button\":\"ButtonWithCircle_button__Xf-_n\",\"button_freezed\":\"ButtonWithCircle_button_freezed__1KpLn\",\"circle\":\"ButtonWithCircle_circle__34hk6\",\"circle_back\":\"ButtonWithCircle_circle_back__2NM6h\"};"],"sourceRoot":""}