{"version":3,"sources":["components/Trainer.module.css","components/Trainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Trainer","useSpring","x","y","set","bind","useDrag","down","movement","mx","className","css","root","div","style","touchAction","classNames","card","card_type_current","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,wB,2LCUzCC,EAAc,WAAO,IAAD,EACPC,qBAAU,iBAAO,CAAEC,EAAG,EAAGC,EAAG,MADrB,0BACtBD,EADsB,EACtBA,EAAGC,EADmB,EACnBA,EAAKC,EADc,KAGzBC,EAAOC,aAAQ,YAAmC,IAAhCC,EAA+B,EAA/BA,KAA+B,gBAAzBC,SAAyB,GAAdC,EAAc,UACrDL,EAAI,CAAEF,EAAGK,EAAOE,EAAK,EAAGN,EAAG,OAY7B,OACE,qBAAKO,UAAWC,IAAIC,KAApB,SAIE,cAAC,WAASC,IAAV,2BAAkBR,KAAlB,IAA0BS,MAAO,CAAEZ,IAAGC,IAAGY,YAAa,QACpDL,UAAWM,IAAWL,IAAIM,KAAMN,IAAIO,mBADtC,sBC9BOC,EAAM,WACjB,OACE,cAAC,EAAD,KCUWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b52b88ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Trainer_root__2D0FO\",\"card\":\"Trainer_card__QlvSl\"};","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { useSpring, animated } from 'react-spring'\nimport { useDrag } from 'react-use-gesture';\n\nimport css from './Trainer.module.css';\n\n// import { steps } from '../modules/steps';\n\n// import { Card } from './Card';\n\nexport const Trainer: FC = () => {\n  const [{ x, y }, set] = useSpring(() => ({ x: 0, y: 0 }))\n\n  const bind = useDrag(({ down, movement: [mx, my] }) => {\n    set({ x: down ? mx : 0, y: 0 })\n  })\n  // const [stepIndex] = useState(0); // setStepIndex\n\n  // const handlePrev = useCallback(() => {\n  //   setStepIndex(Math.max(stepIndex - 1, 0));\n  // }, [stepIndex]);\n\n  // const handleNext = useCallback(() => {\n  //   setStepIndex(Math.min(stepIndex + 1, steps.length - 1));\n  // }, [stepIndex]);\n\n  return (\n    <div className={css.root}>\n      {/* <div className={classNames(css.card, css.card_type_prev)}>\n        \n      </div> */}\n      <animated.div {...bind()} style={{ x, y, touchAction: 'none' }}\n        className={classNames(css.card, css.card_type_current)}\n      >\n        TODO\n      </animated.div>\n      {/* <div className={classNames(css.card, css.card_type_next)}>\n        \n      </div> */}\n      {/* <div>\n        <Card step={steps[stepIndex]} />\n      </div> */}\n    </div>\n  );\n};\n","import { Trainer } from './components/Trainer';\n\nexport const App = () => {\n  return (\n    <Trainer />\n  );\n}\n\n\n/* <div>Работа над страницей в процессе...</div>\n      <div>\n        по материалам сайта{' '}\n        <a href='https://www.ochkov.net/informaciya/stati/kak-vypolnyat-lechebnuyu-gimnastiku-dlya-glaz-po-metodike-avetisova.htm'>\n          ochkov.net\n        </a>\n      </div> */","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}